#Tell Travis that we need super user permissions
sudo: required
services:
#Tell Travis that we need docker
  - docker

#Tell Travis that before executing the script, create the docker image from the Dockerfile.dev.
before_install:
  - docker build -t mroldsir/docker-react-aws -f Dockerfile.dev .

#Tell Travis to execute tests (-- -- Coverage will exit npm run test and print out the code coverage)
script:
  - docker run mroldsir/docker-react-aws npm run test -- --coverage

deploy:
  #specify the provider
  provider: elasticbeanstalk
  #specify the region where the provider is present, You can get this from the AWS ElasticBeanstalk dashboard
  region: "us-east-1"
  #Specify the application name in AWS elastic beanstalk
  app: "docker-react-aws"
  #Specify the environment name in AWS elastic beanstalk
  env: "DockerReactAws-env"
  #Specify the Bucket name which is the name of the S3 (storage) which is created as part of Elastic beanstalk in AWS
  bucket_name: "elasticbeanstalk-us-east-1-086727439383"
  #specify the path of the Bucket , this will be similar to the App name above
  bucket_path: "docker-react-aws"
  #specify when you want to deploy (we want to deploy only when we push code to master branch)
  on:
    branch: master
  #Specify the Environment variable name from which Travis can get the ACCESS_KEY to AWS
  access_key_id: $AWS_ACCESS_KEY
  #Specify the Environment variable name from which Travis can get the SECRET_KEY to AWS
  secret_access_key: "$AWS_SECRET_KEY"